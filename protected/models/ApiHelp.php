<?php
/**
 * Help по API
 *
 * Date: 21.10.16
 */
class ApiHelp
{
    private $domen;

    public function getHelpData()
    {
        $this->domen = $domen = 'https://prommu.com';

        // BM: AUTH_USER
        $data[] = [
            'name' => 'AUTH',
            'example' => $domen . '/api.auth',
            'paramComment' => "Использует метод POST <br />
                Параметр <b>login</b> содержит логин пользователя (email указанный при регистрации). Параметр <b>pass</b> содержит хеш пароля полученный с помощью MD5",
            'comment' => "Служит для авторизации. Вход в личный кабинет",
            'retParams' => "<b>access_token</b> - токен ключ<br/>
                <b>id</b> - идентификатор пользователя в системе<br/>
                <b>type</b> - тип пользователя (2 - соискатель, 3 - работодатель)<br/><b>exp_date</b> - время окончания жизни ключа в формате timestamp",
            'retExamples' => "Пример:<br/>{\"access_token\":\"264e50ef63d432daa8493d230963a195\",\"id\":\"99\",\"type\":\"3\",\"exp_date\":1477573253}",
        ];

        // BM: USER_GET
        $data[] = [
            'name' => 'user_get',
            'example' => $domen . '/api.user_get',
            'paramComment' => "Использует метод POST <br />
                Параметр <b>access_token</b> содержит токен пользователя полученный ранее. Токен нужен для получения некоторых значений по пользователю, таких как, например, respons-new-count и message-new-count. Если токен-ключ не указан, то запрос этих данных вызовет ошибку.<br /> 
                Параметр <b>id</b> id пользователя данные которого мы получаем.<br /> 
                Параметр <b>dataType</b> типы данных которые можно получить (разделяются запятой): <br />
                  &nbsp;-&nbsp;<i>profile</i> - данные профиля, <br />
                  &nbsp;-&nbsp;<i>rating</i> - рейтинг пользователя, <br />
                  &nbsp;-&nbsp;<i>comments</i> - кол-во коментариев, <br />
                  &nbsp;-&nbsp;<i>respons-new-count</i> - кол-во новых откликов (требуется токен-ключ)<br />
                  &nbsp;-&nbsp;<i>message-new-count</i> - кол-во новых сообщений (требуется токен-ключ)",
            'comment' => "Служит для получения различных данных пользователя",
            'retParams' => "<b>tokens</b> - данные по токену<br/>
                <b>profile.applicInfo</b> - основная информация соискателя (только для соискателя)<br/>
                <b>profile.emplInfo</b> - основная информация работодателя (только для работодателя)<br/>
                <b>profile.userAttribs</b> - дополнительные атрибуты профиля пользователя<br/>
                <b>profile.cotype</b> - тип компании работодателя (только для работодателя)<br/>
                <b>profile.userPhotos</b> - фотографии профиля соискателя (параметр <i>ismain</i> указывает, что это основная, только для соискателя). Получаем id лого пользователя, к id нужно добавить размер изображения (100, 400, 000 - исходник) и расширение .jpg<br/>
                <b>rate.ratenames</b> - соотношение id и названия характеристики рейтинга <br />
                <b>rate.rateval</b> - рейтинг пользователя положительный и отрицательный, по разным характеристикам <br />
                <b>comments</b> - кол-во комментариев положительных и отрицательных <br />
                <b>respons-new-count</b> - кол-во новых откликов<br />
                <b>message-new-count.newmessages</b> - объект новых сообщений 
                <b>message-new-count.newmessages.id</b> - id темы 
                <b>message-new-count.newmessages.count</b> - кол-во сообщений в данном диалоге 
                ",
            'retExamples' => "<div class='js-example'>Пример: <a href='#' data-staten='свернуть'>развернуть</a><br/>
<pre>
{
  \"tokens\": {
    \"id\": \"41\",
    \"id_user\": \"3\",
    \"token\": \"19535ff10597411cc87197384c30b7c2\",
    \"date_login\": \"2016-11-09 14:44:13\"
  },
  \"profile\": {
    \"userAttribs\": {
      \"1\": {
        \"val\": \"0503278899\",
        \"id_attr\": \"1\",
        \"name\": \"Моб. Телефон\",
        \"type\": \"0\",
        \"idpar\": \"0\",
        \"key\": \"mob\"
      },
      ...
    },
    \"applicInfo\": {
      ...
    },
    \"userPhotos\": [
      {
        \"id\": \"9\",
        \"photo\": \"20160715050232386\",
        \"ismain\": \"1\"
      },
      ...
    ]
  },
  \"rate\": {
    \"rateval\": {
      \"1\": [
        5,
        0
      ],
      \"2\": [
        0,
        4
      ],
      \"3\": [
        4,
        0
      ]
    },
    \"ratenames\": {
      \"1\": \"Качество выполненной работы\",
      \"2\": \"Контактность\",
      \"3\": \"Пунктуальность\"
    }
  },
  \"comments\": [
    \"2\",
    \"1\"
  ],
  \"respons-new-count\": \"4\",
  \"message-new-count\": {
    \"newmessages\": [
      {
        \"id\": \"1\",
        \"count\": \"4\"
      },
      ...
    ]
  }
}
</pre>
</div>",
        ];

         $data[] = [
            'name' => 'edit_prof v1.0',
            'example' => $this->domen . '/api.edit_prof',
            'paramComment' => "Использует метод POST <br />
               <b>access_token</b> - токен-ключ для идентификации пользователя</br>
                Параметр <b>cloud</b> - фильтр в JSON формате закодированный в Base64 
                пример: <i><br />{\"name\": \"PROMMU\", \"firstname\": \"prommu\", \"lastname\": \"man\", <br />  \"site\": \"http://prommu.com\", \"post\": \"founder\",<br />\"mob\": \"+38066232323\", \"type\": \"102\",
                \"city\": \"1307\", \"isnews\": \"1\"}</i> <br />
                &nbsp;&nbsp;&nbsp;<b>Типы фильтров:</b><br />
                Редактирование профиля работодателя
                <ul>
                  <li><b>name</b> - название компании</li>
                  <li><b>firstname</b> - имя работодателя</li>
                  <li><b>lastname</b> - фамилия работодателя</li>
                  <li><b>city</b> - id города в системе</li>
                  <li><b>site</b> - сайт</li>
                  <li><b>isnews</b> - подписка на рассылку новостей (1 - подписан, 0 - не подписан)</li>
                  <li><b>post</b> - должность в компании</li>
                  <li><b>mob</b> - номер телефона</li>
                  <li><b>type</b> - тип компании</li>
                </ul>
                Редактирование профиля соискателя
                 <ul>
                 <b> Основная информация</b> 
                  <li><b>firstname</b> - имя соискателя</li>
                  <li><b>lastname</b> - фамилия соискателя</li>
                  <li><b>photo</b> - название файла изображения в системе</li>
                  <li><b>birthday</b> - дата рождения</li>
                  <li><b>ismed</b> - наличие медкнижки (1 - есть, 0 - нету)</li>
                  <li><b>isman</b> - пол (1 - мужчина, 0 - женщина)</li>
                  <li><b>ishasavto</b> - наличие авто (1 - в наличии, 0 - отсутствует)</li>
                  <b> Контактная информация </b> 
                  <li><b>viber</b> - наличие связи вайбер (1 , 0) </li>
                  <li><b>mob</b> - номер мобильного телефона</li>
                  <li><b>addmob</b> - дополнительный телефон</li>
                  <li><b>vk</b> - ссылка на страницу вк</li>
                  <li><b>skype</b> - профиль скайп</li>
                  <li><b>fb</b> - ссылка на страницу фб</li>
                  <li><b>icq</b> - профиль icq</li>
                  <li><b>custcont</b> - поле другое</li>
                    <b> Город работы (дополняется)</b> 
                  <li><b>массив city</b> - город работы</li>
                  <li>принимает значения вида {\"1347\": \"1\",\"1349\": \"1\"}, где первое значение  - индекс города в системе, второе - индекс страны.</li>
                   <b> Опыт работы</b> 
                  <li><b>массив mech</b> - опыт работы</li>
                  <li>принимает значения вида {\"0\": \"111\", \"1\":\"117\"} </li>
                  <li>где первое значение - индекс значения в массиве</li>
                  <li>второе значение - id должности в системе</li>
                   <b>Целевая вакансия</b> 
                  <li><b>массив vacs</b> - целевая вакансия</li>
                  <li>принимает значения вида {\"111\": \"330\", \"119\":\"3600\"} </li>
                  <li>где первое значение - номер вакансии в системе</li>
                  <li>второе значение - з.п./час - по умолчанию</li>
                  <b>Дополнительная информация</b> 
                   <li><b>aboutme</b> - дополнительная  текстовая информация</li>
                </ul>
                
                
                ",
            'comment' => "Редактирование профиля пользователя",
            'retParams' => "<b>error</b> - 0 - успех, не 0 - ошибка<br />
                <b>message</b> - текстовое пояснение ошибки<br />
                ",
            'retExamples' => "<div class='js-example'>Пример: <br/>
<pre style='display: block;'>
{
  \"error\": 0,
  \"message\": \"Saved successfully\"
}
</pre>
",
        ];

        $data[] = [
            'name' => 'set_commandrate',
            'example' => $this->domen . '/api.set_commandrate',
            'paramComment' => "Использует метод POST <br />
               параметр <b>access_token</b> - токен-ключ для идентификации пользователя</br>
               параметр <b>cloud</b> - json массив с параметрами</br>
               <b>При отправлении комментария на работодателя в cloud используются параметры</b><br />
                Параметр <b>id_empl</b> - id работодателя в системе<br />
                Параметр <b>message</b> - текст комментария<br />
                Параметр <b>isneg</b> - (1 - отзыв негативный, 0 - позитивное значение)<br />
                <b>При отправлении рейтинга работодателя используются параметры</b><br />
                Параметр <b>id</b> - id профиля работодателя в системе<br />
                Параметр <b>vac</b> - id вакансии, на которую отправляется рейтинг<br />
                Массив <b>rate</b> - принимает значения оценок <br />
                (4 - Соблюдение сроков оплаты, 5 - размер оплаты, 6 - четкость постановки задач, 7 - четкость требований, 8 - контактность)<br />  
                Например, {\"4\": \"-1\",\"5\": \"-1\",\"6\": \"1\",\"7\": \"1\",\"8\": \"1\"}, где 1 - позитивная оценка, -1 - негативная<br />  
                {\"id_empl\": \"9\", \"id\": \"99\", \"vac\": \"56\", \"message\": \"Хороший работодатель, советую!\", \"isneg\": \"0\", \"rate\": {\"4\": \"1\", \"5\": \"1\", \"6\": \"1\", \"7\": \"1\", \"8\": \"-1\"}}<br />  
                
                ",
            'comment' => "Отправить рейтинг и отзыв работодателю ",
            'retParams' => "<b>error</b> - 0 - успех, не 0 - ошибка<br />
                <b>message</b> - текстовое пояснение ошибки<br />
                ",
            'retExamples' => "<div class='js-example'>Пример: <br/>
<pre style='display: block;'>
{
  \"error\": 0,
  \"message\": \"CommAndRate sent\"
}
</pre>
",
        ];


        // BM: USER_RESTOREPASS
        $data[] = [
            'name' => 'user_restorepass',
            'example' => $domen . '/api.user_restorepass?emailaddr=example@example.com',
            'paramComment' => "Использует метод POST <br />
                Параметр <b>emailaddr</b> содержит email пользователя указанный при регистрации",
            'comment' => "Служит для отправки запроса на восстановление пароля",
            'retParams' => "<b>success</b> - указывает на то, что запрос отправлен успешно<br/>
                <b>error</b> - содержит код ошибки <br />
                <b>message</b> - расшифровка ошибки <br />
                ",
            'retExamples' => "Пример:<br/>{\"success\":1}",
        ];

        // BM: POST_GET
        $data[] = [
            'name' => 'POST_GET',
            'example' => $domen . '/api.post_get',
            'paramComment' => "Использует метод GET ",
            'comment' => "Служит для получения списка должностей системы",
            'retParams' => "<b>id</b> - id должности в системе<br />
                <b>name</b> - название должности<br />
                ",
            'retExamples' => "Пример:<br/>[ { \"id\": \"111\", \"type\": \"0\", \"name\": \"Промоутер\" }, { \"id\": \"115\", \"type\": \"0\", \"name\": \"Тайный покупатель\" }, ]",
        ];


        // BM: CITY_GET
        $data[] = [
            'name' => 'CITY_GET',
            'example' => $domen . '/api.city_get',
            'paramComment' => "Использует метод GET <br />
                Параметр <b>filter</b> - часть названия города <br />
                Параметр <b>limit</b> - кол-во результатов в выборке, если 0 - то выдаёт максимум 50 результатов
                ",
            'comment' => "Служит для получения списка городов системы",
            'retParams' => "<b>id</b> - id города в системе<br />
                <b>name</b> - название города<br />
                <b>ismetro</b> - признак наличия метро (1 - имеет)<br />
                 <b>id_co</b> - идентификатор страны (1 - РФ, 2 - Украина, 3 - Белоруссия)<br />
                ",
            'retExamples' => "Пример:<br/>[ { \"id\": \"1838\", \"name\": \"Санкт-Петербург\", \"ismetro\": \"1\" \"id_co\": \"1\"},<br />  
&nbsp;&nbsp;{ \"id\": \"1804\", \"name\": \"Александровская\", \"ismetro\": \"0\" }, ]",
        ];


        // BM: VACANCY_SEARCH
        $data[] = [
            'name' => 'VACANCY_SEARCH',
            'example' => $domen . '/api.vacancy_search',
            'paramComment' => "Использует метод GET <br /><br />
                Параметр <b>filter</b> - фильтр в JSON формате закодированный в Base64 <br />
                &nbsp;&nbsp;&nbsp;пример: <i>{\"post\":[119,126],\"city\":[3193,2948],\"sex\":1}</i> <br />
                &nbsp;&nbsp;&nbsp;типы фильтров:
                <ul>
                  <li><b>post</b> - массив должностей</li>
                  <li><b>city</b> - массив городов</li>
                  <li><b>sr</b> - тип оплаты, 1 - в час, 2 - в неделю, 3 - в месяц. Обязателен для фильтра по зарплате. Указывается совместно с одним из следующих 3-х</li>
                  <li><b>sphf, spht</b> - оплата в час с и по, соответственно</li>
                  <li><b>spwf, spwt</b> - оплата в неделю с и по, соответственно</li>
                  <li><b>spmf, spmt</b> - оплата в месяц с и по, соответственно</li>
                  <li><b>af, at</b> - фильтр по возрасту, с и по, соответственно</li>
                  <li><b>sex</b> - фильтр по полу, 1 - только мужчины, 2 - только женщины</li>
                </ul>
                Параметр <b>limit</b> - кол-во результатов в выборке на страницу, если 0 - то выдаёт максимум 50 результатов <br />
                Параметр <b>page</b> - страница результатов, указывать начиная со 2-й
                ",
            'comment' => "Служит для получения отфильтрованных вакансий в постраничном виде",
            'retParams' => "
                <b>vacations</b> - массив вакансии<br />
                <b>vacations.city</b> - массив городов вакансии<br />
                <b>vacations.posts</b> - массив должностей<br />
                <b>vacations.metroes</b> - массив метро<br />
                <b>vacations.id</b> - идентификатор вакансии<br />
                <b>vacations.ispremium</b> - премиум статус вакансии<br />
                <b>vacations.title</b> - название вакансии<br />
                <b>vacations.requirements</b> - требования к вакансии<br />
                <b>vacations.duties</b> - обязанности вакансии<br />
                <b>vacations.conditions</b> - условия вакансии<br />
                <b>vacations.istemp</b> - тип вакансии: 0 - временная, 1 - постоянная работа<br />
                <b>vacations.remdate</b> - дата автоснятия с публикации<br />
                <b>vacations.shour</b> - оплата в час<br />
                <b>vacations.sweek</b> - оплата в неделю<br />
                <b>vacations.smonth</b> - оплата в месяц<br />
                <b>vacations.isman</b> - только мужчины<br />
                <b>vacations.iswoman</b> - только женщины<br />
                <b>vacations.crdate</b> - дата создания вакансии<br />
                <b>vacations.uid</b> - id пользователя компании<br />
                <b>vacations.coname</b> - имя компании вакансии<br />
                <b>vacations.logo</b> - лого компании <br />
                <b>pageCount</b> - общее кол-во страниц, в зависимости от входного параметра <i>limit</i>
                ",
            'retExamples' => "<div class='js-example'>Пример: <a href='#' data-staten='свернуть'>развернуть</a><br/>
<pre>
{
  \"0\": {
    \"city\": {
      \"1307\": \"Москва\"
    },
    \"posts\": {
      \"113\": \"Супервайзер\",
      \"126\": \"Консультант\"
    },
    \"metroes\": [],
    \"id\": \"55\",
    \"ispremium\": \"0\",
    \"title\": \"Тестовая вакансия пять\",
    \"requirements\": \"\",
    \"duties\": null,
    \"conditions\": null,
    \"istemp\": \"0\",
    \"remdate\": \"02.12.2016\",
    \"shour\": \"50.00\",
    \"sweek\": \"0.00\",
    \"smonth\": \"0.00\",
    \"isman\": \"0\",
    \"iswoman\": \"0\",
    \"crdate\": \"23.08.2016\",
    \"id_city\": \"1307\",
    \"ciname\": \"Москва\",
    \"citycu\": null,
    \"id_attr\": \"126\",
    \"pname\": \"Консультант\",
    \"uid\": \"99\",
    \"coname\": \"Колбасная Корп\",
    \"logo\": \"20160825141005555\"
  },
  \"1\": {
    \"city\": {
      \"1307\": \"Москва\"
    },
    \"posts\": {
      \"119\": \"Аниматор\",
      \"127\": \"Бармен\"
    },
    \"metroes\": [],
    \"id\": \"42\",
    \"ispremium\": \"0\",
    \"title\": \"Требуются аниматоры и бармены\",
    \"requirements\": \"описание описание описание описание ... \",
    \"duties\": \"обязанности обязанности обязанности обязанности ...\",
    \"conditions\": \"условия условия условия условия условия ...\",
    \"istemp\": \"1\",
    \"remdate\": \"02.12.2016\",
    \"shour\": \"0.00\",
    \"sweek\": \"500.00\",
    \"smonth\": \"1500.00\",
    \"isman\": \"1\",
    \"iswoman\": \"1\",
    \"crdate\": \"11.05.2016\",
    \"id_city\": \"1307\",
    \"ciname\": \"Москва\",
    \"citycu\": null,
    \"id_attr\": \"127\",
    \"pname\": \"Бармен\",
    \"uid\": \"1\",
    \"coname\": \"Компания ЛТД 1\",
    \"logo\": \"20160818112123269\"
  },
  ...
}
</pre>
</div>",
        ];

      
$data[] = [
            'name' => 'VACANCY_PUB',
            'example' => $domen . '/api.vacancy_pub',
            'paramComment' => "Использует метод POST <br /><br /> 
                Параметр <b>access_token</b> - токен ключ, используется для идентификации текущего пользователя.<br /> 
                Параметр <b>cloud</b> - json массив значений <br />
                <b>Публикация вакансии 1.0 </b><br />
                <b>title</b> - название вакансии<br />
                <b>agefrom</b> - минимальный возраст соискателя<br />
                <b>ageto</b> - максимальный возраст соискателя<br />
                <b>ismed</b> - наличие медкнижки (1 - требуется, 0 - не требуется)<br />
                <b>isavto</b> - наличие автомобиля (1 - требуется, 0 - не требуется)<br />
                <b>isman</b> - требуется исполнитель мужчина ( 1 - требуется, 0 - не требуется)<br />
                <b>iswoman</b> - требуется исполнитель женщина ( 1 - требуется, 0 - не требуется)<br />
                <b>shour</b> - предлагаемая з/п в час/руб.<br />
                <b>city</b> - город вакансии<br />
                <b>bdate</b> - дата начала работы<br />
                <b>edate</b> - дата окончания работы<br />
                <b>remdate</b> - дата автоснятия с публикации<br />
                <b>posts</b> - массив должностей вакансии<br />
                <b>istemp</b> - вид занятости (0 - временная, 1 - постоянная)<br />
                Пример запроса на создание вакансии: <br />{\"title\": \"Нужны Санта Клаусы\", \"agefrom\": \"18\", \"ageto\": \"28\", <br />
                \"ismed\": \"1\", \"isavto\": \"1\", \"isman\": \"1\", \"iswoman\": \"1\", \"shour\": \"1000\", <br />\"city\": \"1307\", \"bdate\": \"31.12.16\", \"edate\": \"01.01.17\", \"remdate\": \"29.12.16\",<br /> \"posts\": { \"1\": \"111\",\"2\": \"117\"}, \"istemp\": \"0\"}<br />
                <b>Редактирование вакансии 2.0 (к параметрам пункта 1.0 добавляем идетификатор редактируемой вакансии) </b><br />
                <b>idvac</b> - id идентификатор вакансии<br />
                <b>deactive</b> - параметр активации вакансии во время запроса на редактирование (0 - опубликовать вакансию, 1 - снять с публикации)<br />
                Пример запроса на редактирование вакансии: <br />{\"idvac\": \"128\", \"title\": \"Не нужны Санта Клаусы\", \"agefrom\": \"18\", \"ageto\": \"28\", <br />
                \"ismed\": \"1\", \"isavto\": \"1\", \"isman\": \"1\", \"iswoman\": \"1\", \"shour\": \"1000\", <br />\"city\": \"1307\", \"bdate\": \"31.12.16\", \"edate\": \"01.01.17\", \"remdate\": \"29.12.16\",<br /> \"posts\": { \"1\": \"111\",\"2\": \"117\"}, \"istemp\": \"0\", \"deactive\": \"0\"}<br />
            ",
            'comment' => "Публикация и редактирование вакансии",
            'retParams' => "
             <b>id</b> - идентификатор вакансии<br />
            <b>error</b> - сообщение об ошибке (0 - нет ошибки) <br />
            <b>message</b> - пояснение возвращаемого результата<br />
               
                ",
            'retExamples' => "Пример:<br/>[ {\"idvac\":\"128\",\"error\":\"0\",\"message\":\"Saved successfully\"}",
        ];

        $data[] = [
            'name' => 'VACANCY_ACT',
            'example' => $domen . '/api.vacancy_act',
            'paramComment' => "Использует метод POST <br /><br /> 
                Параметр <b>access_token</b> - токен ключ, используется для идентификации текущего пользователя.<br /> 
                Параметр <b>cloud</b> - json массив значений <br />
                <b>Активация вакансии </b><br />
                <b>idvac</b> - id идентификатор вакансии<br />
                <b>deactive</b> - параметр активации вакансии во время запроса на редактирование (0 - опубликовать вакансию, 1 - снять с публикации)<br />
                Пример запроса на редактирование вакансии: <br />{\"idvac\": \"128\", \"deactive\": \"0\"}<br />
            ",
            'comment' => "Публикация и снятие с публикации вакансии",
            'retParams' => "
             <b>id</b> - идентификатор вакансии<br />
            <b>error</b> - сообщение об ошибке (0 - нет ошибки) <br />
            <b>message</b> - пояснение возвращаемого результата<br />
               
                ",
            'retExamples' => "Пример:<br/>[ {\"idvac\":\"128\",\"error\":\"0\",\"message\":\"Saved successfully\"}",
        ];


           $data[] = [
            'name' => 'VACANCY_DATA',
            'example' => $domen . '/api.vacancy_data',
            'paramComment' => "Использует метод POST <br /><br /> 
                Параметр <b>access_token</b> - токен ключ, используется для идентификации текущего пользователя.<br /> 
                Параметр <b>id</b> - id работодателя в системе <br />
            ",
            'comment' => "Получение вакансий по id работодателя",
            'retParams' => "
                <b>id</b> - идентификатор вакансии<br />
                <b>ispremium</b> - премиум статус вакансии<br />
                <b>status</b> - статус вакансии (1 - опубликована, 0 - не опубликована)<br />
                <b>title</b> - название вакансии<br />
                <b>requirements</b> - требования к вакансии<br />
                <b>duties</b> - обязанности вакансии<br />
                <b>conditions</b> - условия вакансии<br />
                <b>city</b> - массив городов вакансии<br />
                <b>posts</b> - массив должностей<br />
                <b>metroes</b> - массив метро<br />
                <b>istemp</b> - тип вакансии: 0 - временная, 1 - постоянная работа<br />
                <b>remdate</b> - дата автоснятия с публикации<br />
                <b>shour</b> - оплата в час<br />
                <b>sweek</b> - оплата в неделю<br />
                <b>smonth</b> - оплата в месяц<br />
                <b>isman</b> - только мужчины<br />
                <b>iswoman</b> - только женщины<br />
                <b>crdate</b> - дата создания вакансии<br />
                <b>logo</b> - лого компании <br />
              
                ",
            'retExamples' => "<div class='js-example'>Пример: <a href='#' data-staten='свернуть'>развернуть</a><br/>
<pre>
{
    \"id\": \"55\",
    \"ispremium\": \"0\",
    \"title\": \"Тестовая вакансия пять\",
    \"requirements\": \"\",
    \"duties\": null,
    \"conditions\": null,
    \"istemp\": \"0\",
    \"remdate\": \"02.12.2016\",
    \"shour\": \"50.00\",
    \"sweek\": \"0.00\",
    \"smonth\": \"0.00\",
    \"isman\": \"0\",
    \"iswoman\": \"0\",
    \"crdate\": \"23.08.2016\",
    \"id_city\": \"1307\",
    \"ciname\": \"Москва\",
    \"citycu\": null,
    \"id_attr\": \"126\",
    \"pname\": \"Консультант\",
    \"logo\": \"20160825141005555\"
}
</pre>
",
        ];

        // BM: VACANCY_GET
        $data[] = [
            'name' => 'VACANCY_GET',
            'example' => $domen . '/api.vacancy_get',
            'paramComment' => "Использует метод POST <br /><br /> 
                Параметр <b>id</b> - идентификатор вакансии <br />
                Параметр <b>access_token</b> - токен ключ, используется для идентификации текущего пользователя. Если не указано - то выдаётся просто общая инфо по вакансии, если указать - дополнительно отправляются данные, которые сообщают о возможности соискателю откликаться на эту вакансию<br />
            ",
            'comment' => "Получение данных по указанной вакансии",
            'retParams' => "<b>vac</b> - данные по вакансии<br />
                <b>vac.city</b> - города вакансии<br />
                <b>vac.city[0]</b> - название города<br />
                <b>vac.city[1]</b> - дата начала работ в этом городе<br />
                <b>vac.city[2]</b> - дата окончания работ в этом городе<br />
                <b>vac.city[3]</b> - идентификатор связки города и вакансии<br />
                <b>vac.city[4]</b> - код города в системе<br />
                <b>vac.post</b> - должности вакансии<br />
                <b>vac.location</b> - локации города<br />
                <b>vac.location.name</b> - название локации<br />
                <b>vac.location.addr</b> - адрес локации<br />
                <b>vac.location.metro</b> - метро локации<br />
                <b>vac.location.idcity</b> - код города в системе<br />
                <b>vac.location.id</b> - код города в системе<br />
                <b>vac.location.ispremium</b> - 1 - премиум вакансия, 0 - обычная<br />
                <b>vac.location.title</b> - заголовок вакансии<br />
                <b>vac.location.requirements</b> - требования к вакансии<br />
                <b>vac.location.duties</b> - обязанности вакансии<br />
                <b>vac.location.conditions</b> - условия вакансии<br />
                <b>vac.location.istemp</b> - условия вакансии<br />
                <b>vac.location.shour</b> - оплата в час<br />
                <b>vac.location.sweek</b> - оплата в неделю<br />
                <b>vac.location.smonth</b> - оплата в месяц<br />
                <b>vac.location.isman</b> - мужчины<br />
                <b>vac.location.iswoman</b> - женщины<br />
                <b>vac.location.exp</b> - опыт<br />
                <b>vac.location.idus</b> - id пользователя владельца вакансии<br />
                <b>vac.location.iscontshow</b> - 1 - показывать контакты, 0 - нет<br />
                <b>vac.location.remdate</b> - дата снятия с публикации<br />
                <b>vac.location.ismed</b> - наличие медкнижки<br />
                <b>vac.location.isavto</b> - наличие авто<br />
                <b>vac.location.contacts</b> - контакты<br />
                <b>vac.location.agefrom</b> - возраст от<br />
                <b>vac.location.ageto</b> - возраст до<br />
                <b>vac.location.status</b> - 1 - отображается на сайте, 0 - нет<br />
                <b>vac.location.crdate</b> - дата создания<br />
                <b>vac.location.eid</b> - id работодателя<br />
                <b>vac.location.coname</b> - название компании<br />
                <b>vac.location.logo</b> - лого компании<br />
                <b>vac.location.logo</b> - лого компании<br />
                <b>vac.loctime</b> - время локации<br />
                <b>vac.loctime[id локации][id времени локации][0]</b> - дата начала работ на локации<br />
                <b>vac.loctime[id локации][id времени локации][1]</b> - дата окончания работ на локации<br />
                <b>vac.loctime[id локации][id времени локации][2]</b> - время начала работ на локации<br />
                <b>vac.loctime[id локации][id времени локации][3]</b> - время окончания работ на локации<br />
                <b>vacAttribs</b> - атрибуты вакансии<br />
                <b>vacAttribs.id_attr</b> - id атрибута<br />
                <b>vacAttribs.val</b> - значение атрибута<br />
                <b>vacAttribs.name</b> - название атрибута<br />
                <b>vacAttribs.type</b> - тип 0 - char, 1 - bool, 2 - int, 3 - no val id only<br />
                <b>vacAttribs.key</b> - alias параметра (уникален)<br />
                <b>response</b> - если был передан access_token, то в этом объекте содержится разрешение откликаться указанному пользователю на данную вакансию<br />
                <b>response.response</b> - 1 - разрешено, иначе нельзя<br />
                <b>response.message</b> - указание причины запрета откликаться, если есть<br />
                ",
            'retExamples' => "<div class='js-example'>Пример: <a href='#' data-staten='свернуть'>развернуть</a><br/>
<pre>
{
  \"vac\": {
    \"city\": {
      \"1307\": [
        \"Москва\",
        \"07.11.2016\",
        \"13.11.2016\",
        \"66\",
        \"1307\"
      ]
    },
    \"post\": {
      \"113\": \"Супервайзер\",
      \"116\": \"Хостесс\",
      \"117\": \"Курьер\",
      \"126\": \"Консультант\"
    },
    \"location\": {
      \"66\": {
        \"12\": {
          \"id\": \"12\",
          \"name\": \"лок 1\",
          \"addr\": \"адр 1\",
          \"metro\": [
            \"3\",
            \"Александровский сад\"
          ],
          \"idcity\": \"1307\"
        },
        \"13\": {
          \"id\": \"13\",
          \"name\": \"лок 2\",
          \"addr\": \"адр 2222333444444\",
          \"metro\": [
            \"1\",
            \"Авиамоторная\"
          ],
          \"idcity\": \"1307\"
        }
        ...
      }
    },
    \"id\": \"41\",
    \"ispremium\": \"1\",
    \"title\": \"Аниматоры на день рождение\",
    \"requirements\": \"Нужны аниматоры\",
    \"duties\": \"Обязанности аниматоро 222222222\",
    \"conditions\": \"Условия удобные\",
    \"istemp\": \"0\",
    \"shour\": \"50.00\",
    \"sweek\": \"250.00\",
    \"smonth\": \"1000.00\",
    \"isman\": \"1\",
    \"iswoman\": \"1\",
    \"exp\": \"нужны с опытом\",
    \"idus\": \"1\",
    \"iscontshow\": \"1\",
    \"remdate\": \"02.12.2016\",
    \"ismed\": \"1\",
    \"isavto\": \"1\",
    \"contacts\": \"произвольный текст\r\nтел. 555-333-4444, email: aa@absd.com, писать с 5 до 9.00\",
    \"agefrom\": \"12\",
    \"ageto\": \"55\",
    \"status\": \"1\",
    \"crdate\": \"11.05.2016\",
    \"eid\": \"1\",
    \"coname\": \"Компания ЛТД 1\",
    \"logo\": \"20160818112123269\",
    \"loctime\": {
      \"12\": {
        \"980208b1edcb8eff0bcb85977ccfbf5e\": [
          \"07.11.2016\",
          \"08.11.2016\",
          \"8:00\",
          \"9:00\"
        ]
      },
      \"13\": {
        \"fbb55a46d2fb1f9719c6f44952d9ea2c\": [
          \"14.08.2016\",
          \"16.08.2016\",
          \"5:00\",
          \"7:30\"
        ],
        \"d637b3ea6b2a38929b22239c939c2322\": [
          \"30.08.2016\",
          \"31.08.2016\",
          \"7:00\",
          \"9:00\"
        ],
        ...
      }
    }
  },
  \"vacAttribs\": {
    \"0\": {
      \"id_attr\": \"0\",
      \"val\": null,
      \"name\": null,
      \"type\": null,
      \"idpar\": null,
      \"key\": null
    },
    \"9\": {
      \"id_attr\": \"9\",
      \"val\": \"162\",
      \"name\": \"Рост\",
      \"type\": \"2\",
      \"idpar\": \"0\",
      \"key\": \"manh\"
    },
    ...
  },
  \"response\": {
    \"response\": 1,
    \"message\": null,
  }
}
</pre>
",
        ];


        // BM: EMPL_SEARCH
        $data[] = $this->apiEmplSearch();
        $data[] = $this->apiPromoSearch();

        // BM: RESPONSE_SET
        $data[] = $this->responseSet();

        // BM: CHAT_THEME_GET
        $data[] = $this->chatThemeGet();

                     $data[] = [
            'name' => 'CHAT_MESSAGE',
            'example' => $domen . '/api.chat_message',
            'paramComment' => "Использует метод POST <br />
                Параметр <b>access_token</b> - содержит токен пользователя полученный ранее. Если токен-ключ не указан, то запрос этих данных вызовет ошибку.<br /> 
                Параметр <b>id_chat</b> - id чата, сообщения которого мы получаем.<br />
                Параметр <b>limit</b> -  кол-во выводимых сообщений чата, если 0 - то выдаёт максимум 50 результатов ",
            'retParams' => "<b>id</b> - id сообщения в чате<br/>
                <b>message</b> - текст сообщения<br/>
                <b>isresp</b> - ответ оппонента, принимает значение 1, если сообщение от собеседника, 0 - значение по умолчанию <br/>
                <b>isread</b> - флаг, принимат значение 1 - сообщение прочитано, 0 - не прочитано <br />
                <b>crtime</b> - время публикации сообщения<br />
                <b>namefrom</b> - имя пользователя, создавшего беседу<br/>
                <b>nameto</b> - имя собеседника<br/>
                <b>crdate</b> - дата публикации сообщения<br/>
                <b>crtime</b> - время публикации сообщения<br />
                ",
            'retExamples' => "<div class='js-example'>Пример: <a href='#' data-staten='свернуть'>развернуть</a><br/>
<pre>
{
  {
  \"id\":\"1\",
  \"message\":\"Hello!\",
  \"isresp\":\"1\",
  \"isread\":\"1\",
  \"namefrom\":\"Friend\",
  \"nameto\":\"Prommu\",
  \"crdate\":\"31.12.2016\",
  \"crtime\":\"23:23:23\"
  },
  {
  \"id\":\"2\",
  \"message\":\"Hello, Friend. Happy new year!\",
  \"isresp\":\"0\",
  \"isread\":\"1\",
  \"namefrom\":\"Friend\",
  \"nameto\":\"Prommu\",
  \"crdate\":\"01.01.2017\",
  \"crtime\":\"00:00:01\"
 }
}

</pre>
</div>",
        ];

      $data[] = [
            'name' => 'send_mess',
            'example' => $this->domen . '/api.send_mess',
            'paramComment' => "Использует метод POST <br />
              Для любой вариации метода отправления сообщений обязателен параметр <b>access_token</b> - токен-ключ для идентификации пользователя</br>
                <b>При отправлении сообщения в существующий чат используются параметры</b><br />
                Параметр <b>tm</b> - id чата <br />
                Параметр <b>l</b> - id последнего сообщения в чате (необязательный параметр)<br />
                Параметр <b>m</b> - сообщение<br />
                <b>При отправлении сообщения в новый чат используются параметры</b><br />
                Параметр <b>new</b> - новый чат, значение new = id пользователя, которому адресуется сообщение<br />
                Параметр <b>m</b> - сообщение<br />
                Параметр <b>t</b> - тема чата <br />
                <b>При отправлении сообщения в чат вакансии используются параметры</b><br />
                Параметр <b>new</b> - новый чат, значение new = id работодателя, автора вакансии, которому адресуется сообщение<br />
                Параметр <b>vid</b> - id вакансии, кототый подтянет тему чата<br />
                Параметр <b>m</b> - сообщение<br />
                
                ",
            'comment' => "Отправить сообщение по api ",
            'retParams' => "<b>error</b> - 0 - успех, не 0 - ошибка<br />
                <b>message</b> - текстовое пояснение ошибки<br />
                ",
            'retExamples' => "<div class='js-example'>Пример: <br/>
<pre style='display: block;'>
{
  \"error\": 0,
  \"message\": \"Telegram sent\"
}
</pre>
",
        ];

        // BM: COTYPES_GET
        $data[] = $this->cotypesGet();

        return $data;
    }
    public function getErrorCodes()
    {
        $data = [
            '1001' => 'Неправильный API метод',
            '1002' => 'Ошибка получения API (в случае, если ошибка произошла из-за неопределенного исключения)',
            '1003' => 'Неправильный заголовок, например GET вместо POST',
            '102' => 'Неправильный Token ключ',
            '103' => 'Token ключ просрочен',
        ];

        return $data;
    }



    /**
     * Получение списка работодателей с фильтрацией
     * @return array
     */
    private function apiEmplSearch()
    {
        return [
            'name' => 'empl_search',
            'example' => $this->domen . '/api.empl_search',
            'paramComment' => "Использует метод GET <br /><br />
                Параметр <b>filter</b> - фильтр в JSON формате закодированный в Base64 <br />
                &nbsp;&nbsp;&nbsp;пример: <i>{\"cotype\":[106,107],\"city\":[3193,2948],\"qs\":\"лтд \"}</i> <br />
                &nbsp;&nbsp;&nbsp;типы фильтров:
                <ul>
                  <li><b>cotype</b> - массив типов фирм работодателей</li>
                  <li><b>city</b> - массив городов</li>
                  <li><b>qs</b> - задать часть имени работодателя</li>
                </ul>
                Параметр <b>limit</b> - кол-во результатов в выборке на страницу, если 0 - то выдаёт максимум 50 результатов <br />
                Параметр <b>page</b> - страница результатов, указывать начиная со 2-й
                ",
            'comment' => "Получение списка работодателей с фильтрацией",
            'retParams' => "<b>empls</b> - массив работодателей<br />
                <b>empls.city</b> - массив городов работодателя<br />
                <b>empls.id</b> - id работодателя<br />
                <b>empls.id_user</b> - id пользователя работодателя<br />
                <b>empls.type</b> - тип фирмы работодателя<br />
                <b>empls.name</b> - имя фирмы<br />
                <b>empls.rate</b> - общий положительный рейтинг<br />
                <b>empls.rate_neg</b> - общий отрицательный рейтинг<br />
                <b>empls.compos</b> - кол-во положительных отзывов<br />
                <b>empls.comneg</b> - кол-во негативных отзывов<br />
                <b>empls.vaccount</b> - кол-во вакансий работодателя<br />
                <b>empls.logo</b> - id лого работодателя, к id нужно добавить размер изображения (100, 400, 000 - исходник) и расширение <i>.jpg</i><br />
                <b>empls.crdate</b> - дата создания профиля<br />
                <b>cotype</b> - типы фирмы работодателя для фильтра<br />
                <b>cotype.id</b> - id типа<br />
                <b>cotype.id_par</b> - id родителя<br />
                <b>cotype.type</b> - тип 0 - char, 1 - bool, 2 - int, 3 - no val id only<br />
                <b>cotype.name</b> - имя параметра<br />
                ",
            'retExamples' => "<div class='js-example'>Пример: <a href='#' data-staten='свернуть'>развернуть</a><br/>
<pre>
{
  \"empls\": {
    \"1\": {
      \"city\": {
        \"1307\": \"Москва\"
      },
      \"id\": \"4\",
      \"id_user\": \"14\",
      \"type\": \"107\",
      \"name\": \"Компания ЛТД 4\",
      \"rate\": \"0\",
      \"rate_neg\": \"0\",
      \"compos\": \"0\",
      \"comneg\": \"0\",
      \"vaccount\": \"7\",
      \"logo\": \"employer-slide-04\",
      \"crdate\": \"23.12.2015\",
    },
    ...
  },
  \"cotype\": [
    {
      \"id\": \"107\",
      \"id_par\": \"101\",
      \"type\": \"0\",
      \"name\": \"ивент агенство\"
    },
    {
      \"id\": \"104\",
      \"id_par\": \"101\",
      \"type\": \"0\",
      \"name\": \"кадровое агенство\"
    },
    ...
  ]
}
</pre>
",
        ];
    }

    private function apiPromoSearch()
    {
        return [
            'name' => 'promo_search',
            'example' => $this->domen . '/api.promo_search',
            'paramComment' => "Использует метод GET <br /><br />
                Параметр <b>filter</b> - фильтр в JSON формате закодированный в Base64 <br />
                &nbsp;&nbsp;&nbsp;пример: <i>{\"posts\":[111,119],\"city\":[3193,2948],\"qs\":\"Prom, \"sf\":\"1 \",\"sm\":\"1\", \"mb\":\"1 \", \"avto\":\"1 \"}</i> <br />
                &nbsp;&nbsp;&nbsp;типы фильтров:
                <ul>
                  <li><b>posts</b> - массив должностей</li>
                  <li><b>city</b> - массив городов</li>
                  <li><b>qs</b> - задать часть фамилии соискателя</li>
                  <li><b>sf</b> - соискатель девушка ( 1 - да, 0 - нет)</li>
                  <li><b>sm</b> - соискатель юноша ( 1, 0 )</li>
                  <li><b>mb</b> - наличие медкнижки ( 1, 0 )</li>
                  <li><b>avto</b> - наличие автомобиля ( 1, 0 )</li>
                </ul>
                Параметр <b>limit</b> - кол-во результатов в выборке на страницу, если 0 - то выдаёт максимум 50 результатов <br />
                Параметр <b>page</b> - страница результатов, указывать начиная со 2-й
                ",
            'comment' => "Получение списка соискателей с фильтрацией",
            'retParams' => "<b>promo</b> - массив соискателей<br />
                <b>promo.city</b> - массив городов соискателя<br />
                <b>promo.id</b> - id соискателя<br />
                <b>promo.id_user</b> - id пользоваетеля в системе<br />
                <b>promo.post</b> - должность соискателя<br />
                <b>promo.metroes</b> - массив метро<br />
                <b>promo.age</b> - возраст соискателя<br />
                <b>promo.projects</b> - количество отработанных проектов<br />
                <b>promo.sex</b> - пол (1 - мужчина, 0 - женщина)<br />
                <b>promo.firstname</b> - имя<br />
                <b>promo.lastname</b> - фамилия<br />
                <b>promo.photo</b> - фотография<br />
                <b>promo.rate</b> - общий положительный рейтинг<br />
                <b>promo.rate_neg</b> - общий отрицательный рейтинг<br />
                <b>promo.ismed</b> - наличие медицинской книги (1 - в наличии, 0 - отсутствует)<br />
                <b>promo.ishasavto</b> - наличие автомобиля ( 1 -есть, 0 - нету)<br />
                <b>promo.date_public</b> - дата регистрации<br />
                <b>promo.birthday</b> - дата рождения соискателя<br />
                <b>promo.mdate</b> - последнее посещение<br />
                <b>promo.id_city</b> - города целевой вакансии<br />
                <b>promo.mid</b> - id станции метро в системе<br />
                <b>promo.mname</b> - название метро<br />
                <b>promo.pay</b> - желаемая заработная плата<br />
                <b>promo.pt</b> - (pay_type) - тип заработной платы (по умолчанию руб/час)<br />
                <b>promo.idpost</b> - id должности целевой вакансии в системе<br />
                <b>promo.comm</b> - общий положительный рейтинг<br />
                <b>promo.commneg</b> - общий отрицательный рейтинг<br />
                ",
            'retExamples' => "<div class='js-example'>Пример: <a href='#' data-staten='свернуть'>развернуть</a><br/>
<pre>
{
  \"promo\":
      {\"1\":
        {\"city\":
            {
              \"1307\":\"Москва\"
            },
          \"post\"
            {
              \"111\":[\"Промоутер\",\"300.00 (руб)\",\"0\ (час)\"]
            },
          \"metroes\":[],
          \"age\":21,
          \"id\":\"5\",
          \"id_user\":\"3\",
          \"id_rating\":\"0\",
          \"firstname\":\"Prommu\",
          \"lastname\":\"Man\",
          \"photo\":\"20160517113318263\",
          \"rate\":\"15\",
          \"rate_neg\":\"1\",
          \"ismed\":\"0\",
          \"ishasavto\":\"0\",
          \"date_public\":\"10.03.2012\",
          \"birthday\":\"23.04.1995\",
          \"mdate\":\"05.12.2016\",
          \"id_city\":\"1307\",
          \"ciname\":\"Москва\",
          \"mid\":null,
          \"mname\":null,
          \"pay\":\"300.00\",
          \"pt\":\"0\",
          \"val\":\"Промоутер\",
          \"idpost\":\"111\",
          \"commneg\":\"2\",
          \"comm\":\"3\"
        }
      }
  }
</pre>
",
        ];
    }



    /**
     * Оставить отклик на вакансию
     * @return array
     */
    private function responseSet()
    {
        return [
            'name' => 'response_set',
            'example' => $this->domen . '/api.response_set',
            'paramComment' => "Использует метод POST <br /><br />
                Параметр <b>id</b> - id вакансии<br />
                Параметр <b>access_token</b> - токен-ключ для идентификации пользователя
                ",
            'comment' => "Оставить отклик на вакансию",
            'retParams' => "<b>error</b> - 0 - успех, не 0 - ошибка<br />
                <b>message</b> - текстовое пояснение ошибки<br />
                ",
            'retExamples' => "<div class='js-example'>Пример: <br/>
<pre style='display: block;'>
{
  \"error\": 0,
  \"message\": \"Заявка на вакансию направлена работодателю...\"
}
</pre>
",
        ];
    }



    /**
     * Оставить отклик на вакансию
     * @return array
     */
    private function chatThemeGet()
    {
        return [
            'name' => 'chat_theme_get',
            'example' => $this->domen . '/api.chat_theme_get',
            'paramComment' => "Использует метод POST <br /><br />
                Параметр <b>access_token</b> - токен-ключ для идентификации пользователя <br />
                Параметр <b>limit</b> - кол-во результатов в выборке на страницу, если 0 - то выдаёт максимум 50 результатов <br />
                Параметр <b>page</b> - страница результатов, указывать начиная со 2-й
                ",
            'comment' => "Получение данных по чатам пользователя",
            'retParams' => "<b>chats</b> - данные чатов<br />
                <b>chats.id</b> - id чата в системе<br />
                <b>chats.id_vac</b> - id вакансии относительно которой идёт обсуждение<br />
                <b>chats.title</b> - заголовок диалога установленный пользователем<br />
                <b>chats.etitle</b> - заголовок диалога, берется из заголовка вакансии, если используется вакансия (<i>id_vac</i> > 0)<br />
                <b>chats.crfdate</b> - дата первого сообщения<br />
                <b>chats.crldate</b> - дата последнего сообщения<br />
                <b>chats.crldatetime</b> - время и дата последнего сообщения<br />
                <b>chats.count</b> - кол-во сообщений в диалоге<br />
                <b>chats.countn</b> - кол-во новых сообщений в диалоге<br />
                <b>chats.logo</b> - logo собеседника<br />
                <b>chats.name</b> - имя компании работодателя (только для работодателя)<br />
                <b>chats.nnn</b> - имя собеседника<br />
                <b>chats.fff</b> - фамилия собеседника<br />
                <b>count</b> - кол-во чатов пользователя<br />
                ",
//            'retExamples' => "<div class='js-example'>Пример: <br/>
            'retExamples' => "<div class='js-example'>Пример: <a href='#' data-staten='свернуть'>развернуть</a><br/>
<pre>
{
  \"chats\": [
    {
      \"id\": \"1\",
      \"id_vac\": \"38\",
      \"title\": \"\",
      \"etitle\": \"Нужен очень опытный бармен-аниматор \",
      \"crfdate\": \"25.04.2016\",
      \"crldate\": \"07.09.2016\",
      \"crldatetime\": \"2016-09-07 09:38:56\",
      \"count\": \"22\",
      \"countn\": \"2\",
      \"name\": \"Компания ЛТД 1\",
      \"logo\": \"20160818112123269\",
      \"nnn\": \"Иван\",
      \"fff\": \"Тест\"
    }
    ...
  ],
  \"count\": \"2\"
}
</pre>
",
        ];
    }



    /**
     * ПОлучаем типы компаний
     * @return array
     */
    private function cotypesGet()
    {
        return [
            'name' => 'cotypes_get',
            'example' => $this->domen . '/api.cotypes_get',
            'paramComment' => "Использует метод GET",
            'comment' => "Получаем типы компаний",
            'retParams' => "<b>id</b> - id типы компании<br />
                <b>id_par</b> - id родителя<br />
                <b>type</b> - тип 0 - char, 1 - bool, 2 - int, 3 - no val id only<br />
                <b>name</b> - название типа<br />
                ",
            'retExamples' => "<div class='js-example'>Пример: <a href='#' data-staten='свернуть'>развернуть</a><br/>
<pre>
[
  {
    \"id\": \"107\",
    \"id_par\": \"101\",
    \"type\": \"0\",
    \"name\": \"ивент агенство\"
  },
  {
    \"id\": \"104\",
    \"id_par\": \"101\",
    \"type\": \"0\",
    \"name\": \"кадровое агенство\"
  },
  ...
]
</pre>
",
        ];
    }
}